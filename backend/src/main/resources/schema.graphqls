type Query {
    allAirbnbCoordinates: [Coordiantes]
    allSalesCoordinates: [Coordiantes]
    saleById(id: ID): Sale
    saleByCoordinatesId(id: ID): Sale
    airbnbById(id: ID): Airbnb
    estimatedSalePriceById(id: ID): Int
    salesByNeighbourhood(neighbourhood: String): [Sale]
    airbnbsByNeighbourhood(neighbourhood: String): [Airbnb]
    neighbourhoodRating(neighbourhood: String): Float
}

type Coordiantes {
    id: ID
    latitude: Float
    longitude: Float
}

type Sale {
    id: ID
    number: Int
    borough: Int
    neighbourhood: String
    buildingClassCategory: String
    taxClassAtPresent: String
    block: Int
    lot: Int
    easement: String
    buildingClassAtPresent: String
    address: String
    apartmentNumber: String
    zipCode: Int
    residentialUnits: Int
    commercialUnits: Int
    totalUnits: Int
    landSquareFeet: String
    grossSquareFeet: String
    yearBuilt: Int
    taxClassAtTimeOfSale: Int
    buildingClassAtTimeOfSale: String
    salePrice: String
    saleDate: String
    idSale: String
    latitude: Float
    longitude: Float
    returnedStreetName: String
    returnedZipCode: Int
}

type Airbnb {
    id: ID
    name: String
    hostId: Int
    hostName: String
    neighbourhoodGroup: String
    neighbourhood: String
    latitude: Float
    longitude: Float
    roomType: String
    price: Int
    minimumNights: Int
    numberOfReviews: Int
    lastReview: String
    reviewsPerMonth: Int
    calculatedHostListingsCount: Int
    availability365: Int
}